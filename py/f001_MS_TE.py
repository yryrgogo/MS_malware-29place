import os
import sys
import gc
import glob
import pandas as pd
import numpy as np
HOME = os.path.expanduser('~')
sys.path.append(f"{HOME}/kaggle/data_analysis/library/")
import utils, ml_utils
from feature_engineering import target_encoding
from utils import logger_func
try:
    if not logger:
        logger=logger_func()
except NameError:
    logger=logger_func()

key = 'MachineIdentifier'
target = 'HasDetections'
country = 'f000_CountryIdentifier'
geo = 'f000_GeoNameIdentifier'
os = 'f000_Census_OSVersion'

feat_path_list = glob.glob('../features/4_winner/*.gz')
train, test = ml_utils.get_train_test(base_path='../input/base_group0*', feat_path_list=feat_path_list, target=target)

is_debug=0
if is_debug:
    train = train.head(10000)
    test = train.head(1000)

ignore_list = [key, target]
num_cols = [col for col in train.columns if col.count('num_') or col.count('ratio')]
cat_cols = [col for col in train.columns if col not in ignore_list and col not in num_cols]

group_list = train['country_group'].unique()
valid_list = []
for group in group_list:
    tmp = train[train['country_group']==group][[key, target]]
    valid_list.append(tmp)
    
kfold = utils.get_kfold(fold_seed=1208, valid_list=valid_list, key=key, target=target)
prefix = 'f003'

for col in cat_cols:
    feature = target_encoding(
        logger=logger
        , train=train
        , test=test
        , key=key
        , target=target
        , level=col
        , fold_type='self'
        , self_kfold=kfold
        , ignore_list=ignore_list
        , prefix=prefix
    )
    utils.to_pkl_gzip(obj=feature, path=f'../features/1_first_valid/{prefix}_TE_{col}')
